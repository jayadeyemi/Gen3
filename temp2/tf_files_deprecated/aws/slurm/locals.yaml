---
locals:
  - user_common_data: "#!/bin/bash\n\ncat > /etc/environment  <<ENVPROXY\nhttp_proxy=http://cloud-proxy.internal.io:3128\nhttps_proxy=http://cloud-proxy.internal.io:3128\nno_proxy=localhost,127.0.0.1,localaddress,169.254.169.254,.internal.io,logs.us-east-1.amazonaws.com\nENVPROXY\n\ncat > /etc/apt/apt.conf.d/01proxy <<APTPROXY\nAcquire::http::Proxy \"http://cloud-proxy.internal.io:3128\";\nAcquire::https::Proxy \"http://cloud-proxy.internal.io:3128\";\nAPTPROXY\n\ncat > /etc/profile.d/99-proxy.sh <<PROFILEPROXY\n#!/bin/bash\nexport http{,s}_proxy=http://cloud-proxy.internal.io:3128\nexport no_proxy=\"localhost,127.0.0.1,localaddress,169.254.169.254,.internal.io,logs.${data.aws_region.current.name}.amazonaws.com\"\nPROFILEPROXY\n\nchmod +x /etc/profile.d/99-proxy.sh\n\nUSER=\"${var.main_os_user}\"\nUSER_HOME=\"/home/$USER\"\nCLOUD_AUTOMATION=\"$USER_HOME/cloud-automation\"\n\nsource /etc/profile.d/99-proxy.sh\ncd $USER_HOME\ngit clone https://github.com/uc-cdis/cloud-automation.git\ncd $CLOUD_AUTOMATION\ngit pull\n\n# In case we want test branches while deploying\nif [ \"${var.branch}\" != \"master\" ];\nthen\n  git checkout \"${var.branch}\"\n  git pull\nfi\ncat $CLOUD_AUTOMATION/${var.authorized_keys} | sudo tee --append $USER_HOME/.ssh/authorized_keys\nchown -R ubuntu. $CLOUD_AUTOMATION\n\napt -y update\nDEBIAN_FRONTEND='noninteractive' apt-get -y -o Dpkg::Options::='--force-confdef' -o Dpkg::Options::='--force-confold' upgrade\n\napt autoremove -y\napt clean\napt autoclean"
  user_controller_data: "\n(\n  cd $USER_HOME\n\n#  bash \"${var.controller_info[\"bootstrap_script\"]}\" \"cwl_group=${var.cwlg_name};${var.controller_info[\"extra_vars\"]}\" 2>&1\n  cd $CLOUD_AUTOMATION\n  git checkout master\n) > /var/log/bootstrapping_script.log"
  user_workers_data: "\n(\n  cd $USER_HOME\n\n#  bash \"${var.worker_info[\"bootstrap_script\"]}\" \"cwl_group=${var.cwlg_name};;${var.worker_info[\"extra_vars\"]}\" 2>&1\n  cd $CLOUD_AUTOMATION\n  git checkout master\n) > /var/log/bootstrapping_script.log"
