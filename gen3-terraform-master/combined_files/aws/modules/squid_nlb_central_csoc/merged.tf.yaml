resource:
- aws_cloudwatch_log_group:
    squid-nlb_log_group:
      name: ${var.env_nlb_name}_log_group
      retention_in_days: 1827
      tags:
        Environment: ${var.env_nlb_name}
        Organization: Basic Services
- aws_iam_role:
    squid-nlb_role:
      assume_role_policy: "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\"\
        : [\n        {\n            \"Action\": \"sts:AssumeRole\",\n            \"\
        Principal\": {\n               \"Service\": \"ec2.amazonaws.com\"\n      \
        \      },\n            \"Effect\": \"Allow\",\n            \"Sid\": \"\"\n\
        \        }\n    ]\n}"
      name: ${var.env_nlb_name}_role
      path: /
- aws_iam_role_policy:
    squid_policy:
      name: ${var.env_nlb_name}_policy
      policy: ${data.aws_iam_policy_document.squid_policy_document.json}
      role: ${aws_iam_role.squid-nlb_role.id}
- aws_iam_instance_profile:
    squid-nlb_role_profile:
      name: ${var.env_nlb_name}_squid-nlb_role_profile
      role: ${aws_iam_role.squid-nlb_role.id}
- aws_subnet:
    squid_pub0:
      availability_zone: ${data.aws_availability_zones.available.names[0]}
      cidr_block: 10.128.${var.env_vpc_octet3}.0/27
      tags: '${tomap({"Name": "${var.env_nlb_name}_pub0", "Organization": "Basic Service",
        "Environment": "${var.env_nlb_name}"})}'
      vpc_id: ${var.env_vpc_id}
- aws_subnet:
    squid_pub1:
      availability_zone: ${data.aws_availability_zones.available.names[1]}
      cidr_block: 10.128.${var.env_vpc_octet3}.32/27
      tags: '${tomap({"Name": "${var.env_nlb_name}_pub1", "Organization": "Basic Service",
        "Environment": "${var.env_nlb_name}"})}'
      vpc_id: ${var.env_vpc_id}
- aws_subnet:
    squid_pub2:
      availability_zone: ${data.aws_availability_zones.available.names[2]}
      cidr_block: 10.128.${var.env_vpc_octet3}.64/27
      tags: '${tomap({"Name": "${var.env_nlb_name}_pub2", "Organization": "Basic Service",
        "Environment": "${var.env_nlb_name}"})}'
      vpc_id: ${var.env_vpc_id}
- aws_subnet:
    squid_pub3:
      availability_zone: ${data.aws_availability_zones.available.names[3]}
      cidr_block: 10.128.${var.env_vpc_octet3}.96/27
      tags: '${tomap({"Name": "${var.env_nlb_name}_pub3", "Organization": "Basic Service",
        "Environment": "${var.env_nlb_name}"})}'
      vpc_id: ${var.env_vpc_id}
- aws_subnet:
    squid_pub4:
      availability_zone: ${data.aws_availability_zones.available.names[4]}
      cidr_block: 10.128.${var.env_vpc_octet3}.128/27
      tags: '${tomap({"Name": "${var.env_nlb_name}_pub4", "Organization": "Basic Service",
        "Environment": "${var.env_nlb_name}"})}'
      vpc_id: ${var.env_vpc_id}
- aws_subnet:
    squid_pub5:
      availability_zone: ${data.aws_availability_zones.available.names[5]}
      cidr_block: 10.128.${var.env_vpc_octet3}.160/27
      tags: '${tomap({"Name": "${var.env_nlb_name}_pub5", "Organization": "Basic Service",
        "Environment": "${var.env_nlb_name}"})}'
      vpc_id: ${var.env_vpc_id}
- aws_route_table_association:
    squid_nlb0:
      route_table_id: ${var.env_pub_subnet_routetable_id}
      subnet_id: ${aws_subnet.squid_pub0.id}
- aws_route_table_association:
    squid_nlb1:
      route_table_id: ${var.env_pub_subnet_routetable_id}
      subnet_id: ${aws_subnet.squid_pub1.id}
- aws_route_table_association:
    squid_nlb2:
      route_table_id: ${var.env_pub_subnet_routetable_id}
      subnet_id: ${aws_subnet.squid_pub2.id}
- aws_route_table_association:
    squid_nlb3:
      route_table_id: ${var.env_pub_subnet_routetable_id}
      subnet_id: ${aws_subnet.squid_pub3.id}
- aws_route_table_association:
    squid_nlb4:
      route_table_id: ${var.env_pub_subnet_routetable_id}
      subnet_id: ${aws_subnet.squid_pub4.id}
- aws_route_table_association:
    squid_nlb5:
      route_table_id: ${var.env_pub_subnet_routetable_id}
      subnet_id: ${aws_subnet.squid_pub5.id}
- aws_lb:
    squid_nlb:
      enable_cross_zone_load_balancing: true
      enable_deletion_protection: true
      internal: true
      lifecycle:
      - ignore_changes:
        - ${subnet_mapping}
      load_balancer_type: network
      name: ${var.env_nlb_name}-prod
      subnet_mapping:
      - subnet_id: ${aws_subnet.squid_pub0.id}
      - subnet_id: ${aws_subnet.squid_pub1.id}
      - subnet_id: ${aws_subnet.squid_pub2.id}
      - subnet_id: ${aws_subnet.squid_pub3.id}
      - subnet_id: ${aws_subnet.squid_pub4.id}
      - subnet_id: ${aws_subnet.squid_pub5.id}
      tags:
        Environment: production
- aws_lb_target_group:
    squid_nlb-http:
      name: ${var.env_nlb_name}-prod-http-tg
      port: 3128
      protocol: TCP
      proxy_protocol_v2: true
      vpc_id: ${var.env_vpc_id}
- aws_lb_listener:
    squid_nlb-http:
      default_action:
      - target_group_arn: ${aws_lb_target_group.squid_nlb-http.arn}
        type: forward
      load_balancer_arn: ${aws_lb.squid_nlb.arn}
      port: '3128'
      protocol: TCP
- aws_lb_target_group:
    squid_nlb-sftp:
      name: ${var.env_nlb_name}-prod-sftp-tg
      port: 22
      protocol: TCP
      vpc_id: ${var.env_vpc_id}
- aws_lb_listener:
    squid_nlb-sftp:
      default_action:
      - target_group_arn: ${aws_lb_target_group.squid_nlb-sftp.arn}
        type: forward
      load_balancer_arn: ${aws_lb.squid_nlb.arn}
      port: '22'
      protocol: TCP
- aws_vpc_endpoint_service:
    squid_nlb:
      acceptance_required: false
      allowed_principals: ${var.allowed_principals_list}
      network_load_balancer_arns:
      - ${aws_lb.squid_nlb.arn}
- aws_launch_template:
    squid_nlb:
      block_device_mappings:
      - device_name: /dev/xvda
        ebs:
        - volume_size: 30
      depends_on:
      - ${aws_iam_instance_profile.squid-nlb_role_profile}
      iam_instance_profile:
      - name: ${aws_iam_instance_profile.squid-nlb_role_profile.name}
      image_id: ${data.aws_ami.public_squid_ami.id}
      instance_type: t3.xlarge
      key_name: ${var.ssh_key_name}
      lifecycle:
      - create_before_destroy: true
      name_prefix: ${var.env_nlb_name}-lt
      network_interfaces:
      - associate_public_ip_address: true
        security_groups:
        - ${aws_security_group.squidnlb_in.id}
        - ${aws_security_group.squidnlb_out.id}
      user_data: '${sensitive(base64encode("#!/bin/bash

        cd /home/ubuntu

        sudo git clone https://github.com/uc-cdis/cloud-automation.git

        sudo chown -R ubuntu. /home/ubuntu/cloud-automation

        cd /home/ubuntu/cloud-automation

        git pull

        # this is just temporary to test stuff from my branch; not needed once it
        is merged

        #git checkout fix/squidnlbloggingfixv1

        #git pull

        #####

        sudo chown -R ubuntu. /home/ubuntu/cloud-automation


        echo "127.0.1.1 ${var.env_nlb_name}" | sudo tee --append /etc/hosts

        sudo hostnamectl set-hostname ${var.env_nlb_name}


        sudo apt -y update

        sudo DEBIAN_FRONTEND=''noninteractive'' apt-get -y -o Dpkg::Options::=''--force-confdef''
        -o Dpkg::Options::=''--force-confold'' upgrade| sudo tee --append /var/log/bootstrapping_script.log


        sudo apt-get autoremove -y

        sudo apt-get clean

        sudo apt-get autoclean


        cd /home/ubuntu

        sudo bash "${var.bootstrap_path}${var.bootstrap_script}" 2>&1 |sudo tee --append
        /var/log/bootstrapping_script.log"))}'
- aws_autoscaling_group:
    squid_nlb:
      desired_capacity: 3
      launch_template:
      - id: ${aws_launch_template.squid_nlb.id}
        version: $Latest
      max_size: 6
      min_size: 1
      name: ${var.env_nlb_name}_autoscaling_grp
      tag:
      - key: Name
        propagate_at_launch: true
        value: ${var.env_nlb_name}_autoscaling_grp_member
      target_group_arns:
      - ${aws_lb_target_group.squid_nlb-http.arn}
      - ${aws_lb_target_group.squid_nlb-sftp.arn}
      vpc_zone_identifier:
      - ${aws_subnet.squid_pub0.id}
      - ${aws_subnet.squid_pub1.id}
      - ${aws_subnet.squid_pub2.id}
      - ${aws_subnet.squid_pub3.id}
      - ${aws_subnet.squid_pub4.id}
      - ${aws_subnet.squid_pub5.id}
- aws_security_group:
    squidnlb_in:
      description: security group that only enables ssh from VPC nodes and CSOC
      ingress:
      - cidr_blocks:
        - ${var.csoc_cidr}
        from_port: 22
        protocol: TCP
        to_port: 22
      - cidr_blocks:
        - ${var.csoc_cidr}
        from_port: 3128
        protocol: TCP
        to_port: 3128
      lifecycle:
      - ignore_changes:
        - ${description}
      name: ${var.env_nlb_name}-squidnlb_in
      tags:
        Environment: ${var.env_nlb_name}
        Organization: Basic Service
      vpc_id: ${var.env_vpc_id}
- aws_security_group:
    squidnlb_out:
      description: security group that allow outbound traffics
      egress:
      - cidr_blocks:
        - 0.0.0.0/0
        from_port: 0
        protocol: '-1'
        to_port: 0
      name: ${var.env_nlb_name}-squidnlb_out
      tags:
        Environment: ${var.env_nlb_name}
        Organization: Basic Service
      vpc_id: ${var.env_vpc_id}
- aws_route53_record:
    squid-nlb:
      name: cloud-proxy.internal.io
      records:
      - ${aws_lb.squid_nlb.dns_name}
      ttl: '300'
      type: CNAME
      zone_id: ${var.csoc_internal_dns_zone_id}
---
data:
- aws_iam_policy_document:
    squid_policy_document:
      statement:
      - actions:
        - logs:CreateLogGroup
        - logs:CreateLogStream
        - logs:GetLogEvents
        - logs:PutLogEvents
        - logs:DescribeLogGroups
        - logs:DescribeLogStreams
        - logs:PutRetentionPolicy
        effect: Allow
        resources:
        - '*'
- aws_availability_zones:
    available: {}
- aws_ami:
    public_squid_ami:
      filter:
      - name: name
        values:
        - ${var.image_name_search_criteria}
      - name: virtualization-type
        values:
        - hvm
      - name: root-device-type
        values:
        - ebs
      most_recent: true
      owners:
      - ${var.ami_account_id}
---
output:
- squid_nlb_dns_name:
    value: ${aws_lb.squid_nlb.dns_name}
- vpc_endpoint_service_name:
    value: ${aws_vpc_endpoint_service.squid_nlb.service_name}
---
variable:
- aws_account_id:
    default: '433568766270'
- env_vpc_octet3:
    default: '4'
- env_vpc_id:
    default: vpc-e2b51d99
- env_nlb_name:
    default: csoc_squid_nlb
- ami_account_id:
    default: 099720109477
- image_name_search_criteria:
    default: ubuntu/images/hvm-ssd/ubuntu-xenial-16.04-amd64-server-2018*
- csoc_cidr:
    default: 10.128.0.0/20
- env_pub_subnet_routetable_id:
    default: rtb-1cb66860
- ssh_key_name:
    default: rarya_id_rsa
- allowed_principals_list:
    default:
    - arn:aws:iam::707767160287:root
- bootstrap_path:
    default: cloud-automation/flavors/squid_nlb_central/
- bootstrap_script:
    default: squidvm.sh
- csoc_internal_dns_zone_id: {}
