resource:
- aws_s3_bucket:
    mybucket:
      bucket: ${var.bucket_name}
      lifecycle:
      - ignore_changes:
        - tags
        - tags_all
- aws_s3_bucket_server_side_encryption_configuration:
    default_kms_encryption:
      bucket: ${aws_s3_bucket.mybucket.id}
      count: '${var.aes_encryption ? 0 : var.kms_key_id != "" ? 0 : 1}'
      rule:
      - apply_server_side_encryption_by_default:
        - sse_algorithm: aws:kms
- aws_s3_bucket_server_side_encryption_configuration:
    kms_key_encryption:
      bucket: ${aws_s3_bucket.mybucket.id}
      count: '${var.aes_encryption ? 0 : var.kms_key_id != "" ? 1 : 0}'
      rule:
      - apply_server_side_encryption_by_default:
        - kms_master_key_id: ${var.kms_key_id}
          sse_algorithm: aws:kms
- aws_s3_bucket_server_side_encryption_configuration:
    aes_encryption:
      bucket: ${aws_s3_bucket.mybucket.id}
      count: '${var.aes_encryption ? 1 : 0}'
      rule:
      - apply_server_side_encryption_by_default:
        - sse_algorithm: AES256
- aws_s3_bucket_lifecycle_configuration:
    mybucket:
      bucket: ${aws_s3_bucket.mybucket.id}
      count: '${var.bucket_lifecycle_configuration != "" ? 1 : 0}'
      rule:
      - abort_incomplete_multipart_upload:
        - days_after_initiation: 7
        id: mybucket
        status: Enabled
- aws_s3_bucket_logging:
    mybucket:
      bucket: ${aws_s3_bucket.mybucket.id}
      count: '${var.logging_bucket_name != "" ? 1 : 0}'
      lifecycle:
      - ignore_changes: ${all}
      target_bucket: ${var.logging_bucket_name}
      target_prefix: log/${var.bucket_name}/
- aws_s3_bucket_ownership_controls:
    mybucket:
      bucket: ${aws_s3_bucket.mybucket.id}
      rule:
      - object_ownership: ${var.bucket_ownership}
- aws_s3_bucket_public_access_block:
    mybucket:
      block_public_acls: ${var.block_public_acls}
      block_public_policy: ${var.block_public_policy}
      bucket: ${aws_s3_bucket.mybucket.id}
      count: '${var.public_access_block ? 1 : 0}'
      ignore_public_acls: ${var.ignore_public_acls}
      restrict_public_buckets: ${var.restrict_public_buckets}
- aws_s3_bucket_versioning:
    name:
      bucket: ${aws_s3_bucket.mybucket.id}
      count: '${var.versioning ? 1 : 0}'
      versioning_configuration:
      - status: Enabled
- aws_s3_bucket_policy:
    mybucket:
      bucket: ${aws_s3_bucket.mybucket.id}
      count: '${var.policy_role_arn != "" ? 1 : 0}'
      policy: '${jsonencode({"Version": "2012-10-17", "Statement": [{"Effect": "Allow",
        "Principal": {"AWS": "${var.policy_role_arn}"}, "Action": "${var.policy_actions}",
        "Resource": ["${aws_s3_bucket.mybucket.arn}", "${aws_s3_bucket.mybucket.arn}/*"]}]})}'
---
variable:
- bucket_name: {}
- bucket_ownership:
    default: BucketOwnerEnforced
- logging_bucket_name:
    default: ''
    type: string
- aes_encryption:
    default: false
- kms_key_id:
    default: ''
    description: The KMS key to use for the bucket
- bucket_lifecycle_configuration:
    default: ''
- public_access_block:
    default: true
- block_public_acls:
    default: true
- block_public_policy:
    default: true
- ignore_public_acls:
    default: true
- restrict_public_buckets:
    default: true
- versioning:
    default: false
- policy_role_arn:
    default: ''
- policy_actions:
    default:
    - s3:GetObject
    - s3:PutObject
    - s3:DeleteObject
    type: ${list(string)}
