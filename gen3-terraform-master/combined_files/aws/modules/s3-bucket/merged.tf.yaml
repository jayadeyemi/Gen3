module:
- cdis_s3_logs:
    environment: ${var.environment}
    log_bucket_name: s3logs-${local.clean_bucket_name}
    source: ../s3-logs
resource:
- aws_s3_bucket:
    mybucket:
      bucket: ${local.clean_bucket_name}
      tags:
        Environment: ${var.environment}
        Name: ${local.clean_bucket_name}
        Purpose: data bucket
- aws_s3_bucket_server_side_encryption_configuration:
    mybucket:
      bucket: ${aws_s3_bucket.mybucket.id}
      rule:
      - apply_server_side_encryption_by_default:
        - sse_algorithm: AES256
- aws_s3_bucket_lifecycle_configuration:
    mybucket:
      bucket: ${aws_s3_bucket.mybucket.id}
      rule:
      - abort_incomplete_multipart_upload:
        - days_after_initiation: 7
        id: mybucket
        status: Enabled
- aws_s3_bucket_logging:
    mybucket:
      bucket: ${aws_s3_bucket.mybucket.id}
      target_bucket: ${module.cdis_s3_logs.log_bucket_name}
      target_prefix: log/${local.clean_bucket_name}/
- aws_iam_role:
    mybucket_reader:
      assume_role_policy: "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\"\
        : [\n        {\n            \"Action\": \"sts:AssumeRole\",\n            \"\
        Principal\": {\n               \"Service\": \"ec2.amazonaws.com\"\n      \
        \      },\n            \"Effect\": \"Allow\",\n            \"Sid\": \"\"\n\
        \        }\n    ]\n}"
      name: bucket_reader_${local.clean_bucket_name}
      path: /
- aws_iam_policy:
    mybucket_reader:
      description: Read ${local.clean_bucket_name}
      name: bucket_reader_${local.clean_bucket_name}
      policy: ${data.aws_iam_policy_document.mybucket_reader.json}
- aws_iam_role_policy_attachment:
    mybucket_reader:
      policy_arn: ${aws_iam_policy.mybucket_reader.arn}
      role: ${aws_iam_role.mybucket_reader.name}
- aws_iam_instance_profile:
    mybucket_reader:
      name: bucket_reader_${local.clean_bucket_name}
      role: ${aws_iam_role.mybucket_reader.id}
- aws_iam_role:
    mybucket_writer:
      assume_role_policy: "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\"\
        : [\n        {\n            \"Action\": \"sts:AssumeRole\",\n            \"\
        Principal\": {\n               \"Service\": \"ec2.amazonaws.com\"\n      \
        \      },\n            \"Effect\": \"Allow\",\n            \"Sid\": \"\"\n\
        \        }\n    ]\n}"
      name: bucket_writer_${local.clean_bucket_name}
      path: /
- aws_iam_policy:
    mybucket_writer:
      description: Read or write ${local.clean_bucket_name}
      name: bucket_writer_${local.clean_bucket_name}
      policy: ${data.aws_iam_policy_document.mybucket_writer.json}
- aws_iam_role_policy_attachment:
    mybucket_writer:
      policy_arn: ${aws_iam_policy.mybucket_writer.arn}
      role: ${aws_iam_role.mybucket_writer.name}
- aws_iam_instance_profile:
    mybucket_writer:
      name: bucket_writer_${local.clean_bucket_name}
      role: ${aws_iam_role.mybucket_writer.id}
- aws_iam_role:
    cloudtrail_writer:
      assume_role_policy: "{\n    \"Version\": \"2012-10-17\",\n    \"Statement\"\
        : [\n        {\n            \"Action\": \"sts:AssumeRole\",\n            \"\
        Principal\": {\n               \"Service\": \"cloudtrail.amazonaws.com\"\n\
        \            },\n            \"Effect\": \"Allow\",\n            \"Sid\":\
        \ \"\"\n        }\n    ]\n}"
      count: ${var.cloud_trail_count}
      name: cwl_writer_${local.clean_bucket_name}
      path: /
- aws_iam_policy:
    trail_writer:
      count: ${var.cloud_trail_count}
      description: Read or write     ${data.aws_cloudwatch_log_group.logs_destination.name}
      name: trail_write_to_cw_${data.aws_cloudwatch_log_group.logs_destination.name}
      policy: ${data.aws_iam_policy_document.trail_policy.json}
- aws_iam_role_policy_attachment:
    trail_writer_role:
      count: ${var.cloud_trail_count}
      policy_arn: ${aws_iam_policy.trail_writer.*.arn[count.index]}
      role: ${aws_iam_role.cloudtrail_writer.*.name[count.index]}
- aws_cloudtrail:
    logger_trail:
      cloud_watch_logs_group_arn: ${data.aws_cloudwatch_log_group.logs_destination.arn}
      cloud_watch_logs_role_arn: ${aws_iam_role.cloudtrail_writer.*.arn[count.index]}
      count: ${var.cloud_trail_count}
      event_selector:
      - data_resource:
        - type: AWS::S3::Object
          values:
          - ${aws_s3_bucket.mybucket.arn}/
        include_management_events: false
        read_write_type: All
      include_global_service_events: false
      name: ${local.clean_bucket_name}-trail
      s3_bucket_name: ${module.cdis_s3_logs.log_bucket_name}
      s3_key_prefix: trailLogs
      tags:
        Environment: ${var.environment}
        Name: ${local.clean_bucket_name}
        Purpose: trail_for_${local.clean_bucket_name}_data_bucket
---
data:
- aws_iam_policy_document:
    mybucket_reader:
      statement:
      - actions:
        - s3:Get*
        - s3:List*
        effect: Allow
        resources:
        - ${aws_s3_bucket.mybucket.arn}
        - ${aws_s3_bucket.mybucket.arn}/*
- aws_iam_policy_document:
    mybucket_writer:
      statement:
      - actions:
        - s3:Get*
        - s3:List*
        effect: Allow
        resources:
        - ${aws_s3_bucket.mybucket.arn}
        - ${aws_s3_bucket.mybucket.arn}/*
      - actions:
        - s3:PutObject
        - s3:GetObject
        - s3:DeleteObject
        effect: Allow
        resources:
        - ${aws_s3_bucket.mybucket.arn}/*
- aws_cloudwatch_log_group:
    logs_destination:
      name: ${var.environment}
- aws_iam_policy_document:
    trail_policy:
      statement:
      - actions:
        - logs:CreateLogStream
        - logs:PutLogEvents
        effect: Allow
        resources:
        - ${data.aws_cloudwatch_log_group.logs_destination.arn}
---
output:
- bucket_name:
    value: ${aws_s3_bucket.mybucket.id}
- log_bucket_name:
    value: ${module.cdis_s3_logs.log_bucket_name}
- rw_role_id:
    value: ${aws_iam_role.mybucket_writer.id}
- ro_role_id:
    value: ${aws_iam_role.mybucket_reader.id}
---
locals:
- clean_bucket_name: ${replace(replace(var.bucket_name, "_", "-"), ".", "-")}
variable:
- bucket_name: {}
- environment: {}
- cloud_trail_count:
    default: '1'
    description: Number of cloud trails to create - Limited to 5 trails per region
