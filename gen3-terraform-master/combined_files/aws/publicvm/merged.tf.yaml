data:
- aws_ami:
    ubuntu:
      filter:
      - name: name
        values:
        - ubuntu/images/hvm-ssd/ubuntu-bionic-18.04-amd64-server-*
      - name: virtualization-type
        values:
        - hvm
      most_recent: true
      owners:
      - 099720109477
- aws_vpc:
    vpc:
      filter:
      - name: tag:Name
        values:
        - ${var.vpc_name}
- aws_subnet:
    public:
      filter:
      - name: tag:Name
        values:
        - ${var.subnet_name}
      vpc_id: ${data.aws_vpc.vpc.id}
- aws_security_group:
    ssh_in:
      filter:
      - name: group-name
        values:
        - ${var.ssh_in_secgroup}
      vpc_id: ${data.aws_vpc.vpc.id}
- aws_security_group:
    egress:
      filter:
      - name: group-name
        values:
        - ${var.egress_secgroup}
      vpc_id: ${data.aws_vpc.vpc.id}
---
output:
- ip:
    value: ${aws_eip.ips.public_ip}
---
resource:
- aws_iam_role:
    role:
      assume_role_policy: "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n\
        \    {\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n  \
        \      \"Service\": \"ec2.amazonaws.com\"\n      },\n      \"Effect\": \"\
        Allow\",\n      \"Sid\": \"\"\n    }\n  ]\n}"
      name: ${var.vm_name}-${var.vpc_name}-public_role
      path: /
      tags:
        tag-key: ${var.vpc_name}-public
- aws_iam_instance_profile:
    profile:
      name: ${var.vm_name}-${var.vpc_name}-public_instance-profile
      role: ${aws_iam_role.role.name}
- aws_iam_policy_attachment:
    profile-attach:
      count: ${length(var.policies)}
      name: ${var.vm_name}-${var.vpc_name}-public-${count.index}
      policy_arn: ${element(var.policies, count.index)}
      roles:
      - ${aws_iam_role.role.name}
- aws_instance:
    cluster:
      ami: '${var.ami == "" ? data.aws_ami.ubuntu.id : var.ami}'
      iam_instance_profile: ${aws_iam_instance_profile.profile.name}
      instance_type: ${var.instance_type}
      lifecycle:
      - ignore_changes:
        - ${private_ip}
        - ${root_block_device}
        - ${ebs_block_device}
        - ${user_data}
      monitoring: false
      root_block_device:
      - encrypted: true
        volume_size: ${var.volume_size}
      subnet_id: ${data.aws_subnet.public.id}
      tags:
        Environment: ${var.vpc_name}
        Name: ${var.vm_name}-${var.vpc_name}-public
        Terraform: 'true'
      user_data: "#!/bin/bash \n\n(\n  if [[ ! -f /home/ubuntu/.ssh/authorized_keys\
        \ ]]; then\n    mkdir -p /home/ubuntu/.ssh/authorized_keys\n    chown ubuntu:\
        \ /home/ubuntu/.ssh/authorized_keys\n    chmod 0600 /home/ubuntu/.ssh/authorized_keys\n\
        \  fi\n  cat - >> /home/ubuntu/.ssh/authorized_keys <<EOM\nssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDiVYoa9i91YL17xWF5kXpYh+PPTriZMAwiJWKkEtMJvyFWGv620FmGM+PczcQN47xJJQrvXOGtt/n+tW1DP87w2rTPuvsROc4pgB7ztj1EkFC9VkeaJbW/FmWxrw2z9CTHGBoxpBgfDDLsFzi91U2dfWxRCBt639sLBfJxHFo717Xg7L7PdFmFiowgGnqfwUOJf3Rk8OixnhEA5nhdihg5gJwCVOKty8Qx73fuSOAJwKntcsqtFCaIvoj2nOjqUOrs++HG6+Fe8tGLdS67/tvvgW445Ik5JZGMpa9y0hJxmZj1ypsZv/6cZi2ohLEBCngJO6d/zfDzP48Beddv6HtL\
        \ rarya_id_rsa\nssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDBFbx4eZLZEOTUc4d9kP8B2fg3HPA8phqJ7FKpykg87w300H8uTsupBPggxoPMPnpCKpG4aYqgKC5aHzv2TwiHyMnDN7CEtBBBDglWJpBFCheU73dDl66z/vny5tRHWs9utQNzEBPLxSqsGgZmmN8TtIxrMKZ9eX4/1d7o+8msikCYrKr170x0zXtSx5UcWj4yK1al5ZcZieZ4KVWk9/nPkD/k7Sa6JM1QxAVZObK/Y9oA6fjEFuRGdyUMxYx3hyR8ErNCM7kMf8Yn78ycNoKB5CDlLsVpPLcQlqALnBAg1XAowLduCCuOo8HlenM7TQqohB0DO9MCDyZPoiy0kieMBLBcaC7xikBXPDoV9lxgvJf1zbEdQVfWllsb1dNsuYNyMfwYRK+PttC/W37oJT64HJVWJ1O3cl63W69V1gDGUnjfayLjvbyo9llkqJetprfLhu2PfSDJ5jBlnKYnEj2+fZQb8pUrgyVOrhZJ3aKJAC3c665avfEFRDO3EV/cStzoAnHVYVpbR/EXyufYTh7Uvkej8l7g/CeQzxTq+0UovNjRA8UEXGaMWaLq1zZycc6Dx/m7HcZuNFdamM3eGWV+ZFPVBZhXHwZ1Ysq2mpBEYoMcKdoHe3EvFu3eKyrIzaqCLT5LQPfaPJaOistXBJNxDqL6vUhAtETmM5UjKGKZaQ==\
        \ emalinowski@uchicago.edu\nssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDKJR5N5VIU9qdSfCtlskzuQ7A5kNn8YPeXsoKq0HhYZSd4Aq+7gZ0tY0dFUKtXLpJsQVDTflINc7sLDDXNp3icuSMmxOeNgvBfi8WnzBxcATh3uqidPqE0hcnhVQbpsza1zk8jkOB2o8FfBdDTOSbgPESv/1dnGApfkZj96axERUCMzyyUSEmif2moWJaVv2Iv7O+xjQqIZcMXiAo5BCnTCFFKGVOphy65cOsbcE02tEloiZ3lMAPMamZGV7SMQiD3BusncnVctn/E1vDqeozItgDrTdajKqtW0Mt6JFONVFobzxS8AsqFwaHiikOZhKq2LoqgvbXZvNWH2zRELezP\
        \ jawadq@Jawads-MacBook-Air.local\nssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC+iK0ZvY25lgwh4nNUTkD0bq2NES3cPEK+f52HEC2GSVI845ZOqX32kfNpDFT9zvspadOA6KwAgKsRphP/iV8k8WLjAYSYQ3sAE/enuW1+Cr0hhmtahA+uxOavUwsvJ93vIOlIlkD26gIUZTZeYUhi6Aa2FjWFTJ0CtxtUYEdBh+sqW3VoyVvOOA+2DnNYt7/pTrh0DwNxHX7+9TfkmRaVLD4xcdwNLx5N3Yyjgci+oGmw8HATYfSBTaGEXSKJflrN6TDqN87D2pJpMkEvYeZIktoU0kX4HwodrNfwhlruJ2PsePzZ28xlaaZz2fI/LGiqnwf1fRY10R5C/9RpcAcpcYaz305uBCUCI7GGbL9u7WC0W0NZsyaaybaKXyt97p/05os2oe/N5un0whv+NL8z5SLZnaelvttrmVKApvsCD/IqZv5b2PlDilY3L638eKmVOcHaLX/N67MeL9FKnipv2QPzaUKhMoEAtSPqdOWnlndt9dmMBlqT0BKmB85mm0k=\
        \ ajoa@uchicago.edu\nssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCdIXKLMs14c8U9exX/sOoIcvOCZ4v2pKsjdM1VBA56GyI98E1R+hxTBecHeWri9MeQcZkrlmjqT3ZzCb87+n0W2LEWquLNfeheAEq61ogi0taxWEpnb4rIAr1U9aS3d0mk5NIIivrwaUHTIvUhH8mn4Pek0GgybZAsjN/MpZ9PZwUtXNmjZoY5gWR0QO4ZWu7ARknFoNcTXwpWyl/Khhal0KKhdB38y3MpJc03IIqhem15e78jRlko04CAZX3zlFAQwbxnrpgrJUMYeY8fZqpV6FiWC40yu+n9KwAZkmtrc45mkxahj8c3QtJ/Z3t33yXEN9PEHV6z104STYi2cPVD\
        \ rpollard@news-MacBook-Pro.local\nEOM\n)\n(\n  export DEBIAN_FRONTEND=noninteractive\n\
        \    \n  if which hostnamectl > /dev/null; then\n    hostnamectl set-hostname\
        \ 'lab'\n  fi\n  mkdir -p -m 0755 /var/lib/gen3\n  cd /var/lib/gen3\n  if\
        \ ! which git > /dev/null; then\n    apt update\n    apt install git -y\n\
        \  fi\n  git clone https://github.com/uc-cdis/cloud-automation.git \n  cd\
        \ ./cloud-automation\n  cat ./files/authorized_keys/ops_team | tee -a /home/ubuntu/.ssh/authorized_keys\n\
        \n  if [[ ! -d ./Chef ]]; then\n    # until the code gets merged\n    git\
        \ checkout chore/labvm\n  fi\n\n  cd ./Chef\n  bash ./installClient.sh\n \
        \ # hopefully chef-client is ready to run now\n  cd ./repo\n  /bin/rm -rf\
        \ nodes\n  # add -l debug for more verbose logging\n  chef-client --chef-license\
        \ accept --local-mode --node-name littlenode --override-runlist 'role[devbox]'\n\
        ) 2>&1 | tee /var/log/gen3boot.log"
      vpc_security_group_ids:
      - ${data.aws_security_group.ssh_in.id}
      - ${data.aws_security_group.egress.id}
- aws_eip:
    ips:
      instance: ${aws_instance.cluster.id}
      vpc: true
terraform:
- backend:
  - s3:
      encrypt: 'true'
  required_providers:
  - aws:
      source: hashicorp/aws
      version: ~> 5.0
---
variable:
- vpc_name:
    default: vadcprod
- instance_type:
    default: t3.small
- ssh_in_secgroup:
    default: ssh_eks_vadcprod
- egress_secgroup:
    default: out
- subnet_name:
    default: public
- volume_size:
    default: 500
- policies:
    default: []
- ami:
    default: ''
- vm_name: {}
