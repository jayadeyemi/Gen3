output:
- manifest_lambda:
    value: ${module.bucket-lambda-function.function_arn}
---
module:
- bucket-lambda-function:
    lambda_function_description: ${var.lambda_function_description}
    lambda_function_env: ${var.lambda_function_env}
    lambda_function_file: ${path.module}/${var.lambda_function_file}
    lambda_function_handler: ${var.lambda_function_handler}
    lambda_function_iam_role_arn: ${var.lambda_function_iam_role_arn}
    lambda_function_name: ${var.lambda_function_name}
    lambda_function_timeout: ${var.lambda_function_timeout}
    source: ../modules/lambda-function/
terraform:
- backend:
  - s3:
      encrypt: 'true'
  required_providers:
  - aws:
      source: hashicorp/aws
      version: ~> 5.0
---
variable:
- lambda_function_file:
    description: Path to the function file
- lambda_function_name:
    description: Name of the function you are creating
- lambda_function_description:
    default: ''
    description: Description of the function
- lambda_function_iam_role_arn:
    description: IAM role ARN to attach to the function
- lambda_function_handler:
    default: lambda_funtion.handler
    description: Function handler
- lambda_function_runtime:
    default: python3.7
    description: Language the function will use
- lambda_function_timeout:
    default: 3
    description: Timeout of the function in seconds
- lambda_function_memory_size:
    default: 128
    description: How much RAM in MB will be used
- lambda_function_env:
    default: {}
    description: Environmental variables for the funtion
- lambda_function_tags:
    default: {}
    description: Tags for the function
- lambda_function_with_vpc:
    default: false
    description: Will the function be attached to a vpc
- lambda_function_security_groups:
    default: []
    description: Security groups for the lambda function with a vpc
- lambda_function_subnets_id:
    default: []
    description: Subnets for the lambda function with a vpc
