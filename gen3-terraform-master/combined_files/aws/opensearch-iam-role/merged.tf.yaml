data:
- aws_iam_policy_document:
    opensearch_cluster_access:
      statement:
      - actions:
        - es:*
        effect: Allow
        resources:
        - ${var.opensearch_cluster_arn}/*
- aws_iam_policy_document:
    opensearch_assume_role:
      statement:
      - actions:
        - sts:AssumeRoleWithWebIdentity
        condition:
        - test: StringLike
          values:
          - system:serviceaccount:*:es-proxy
          variable: ${local.oidc_url}:sub
        effect: Allow
        principals:
        - identifiers:
          - ${var.oidc_provider_arn}
          type: Federated
locals:
- oidc_url: ${replace(var.oidc_provider_url, "https://", "")}
resource:
- aws_iam_policy:
    opensearch_access_policy:
      name: opensearch-access-policy
      policy: ${data.aws_iam_policy_document.opensearch_cluster_access.json}
- aws_iam_role:
    opensearch_access_role:
      assume_role_policy: ${data.aws_iam_policy_document.opensearch_assume_role.json}
      managed_policy_arns:
      - ${aws_iam_policy.opensearch_access_policy.arn}
      name: opensearch-access-role
---
resource:
- aws_iam_role:
    opensearch_iam_role:
      assume_role_policy: ${data.aws_iam_policy_document.opensearch_assume_role.json}
      name: ${var.environment}-elasticsearch-access-role
- aws_iam_policy:
    opensearch_iam_role_policy:
      name: opensearch_access_policy
      policy: ${data.aws_iam_policy_document.opensearch_cluster_access.json}
- aws_iam_role_policy_attachment:
    opensearch:
      policy_arn: ${aws_iam_policy.opensearch_iam_role_policy.arn}
      role: ${aws_iam_role.opensearch_iam_role.name}
---
variable:
- opensearch_cluster_arn: {}
- environment: {}
- oidc_provider_url: {}
- oidc_provider_arn: {}
